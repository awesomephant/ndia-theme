.toolbar {
  font-size: 2rem;
  text-align: center;
  padding-top: 1.5em;
  display: block;
  max-width: 36em;
  font-size: var(--ms--1);
  &[open] summary {
    padding-bottom: 1;
    padding-bottom: 0.5em;
  }
  summary {
    text-align: left;
    font-size: var(--ms-0);
    font-weight: 500;
    cursor: pointer;
    @include bp(m) {
      display: none;
    }
    &:hover,
    &:focus {
      text-decoration: underline;
    }
  }

  .controls {
    width: 100%;
    display: flex;
    flex-flow: column;
    @include bp(m) {
      flex-flow: row;
    }
  }
}

.options-group {
  flex-grow: 1;
  margin-bottom: 1em;
  @include bp(m) {
    margin-bottom: 0;
    margin-right: 1em;
  }
  &:last-of-type {
    margin-right: 0;
  }
  legend {
    display: block;
  }
  .options {
    overflow: hidden;
    display: flex;
    flex-wrap: wrap;
    border: $border-width solid var(--c-stroke);
    border-radius: $border-radius-small;
    box-shadow: 0 3px 2px 1px var(--c-shadow);
    @include bp(m) {
      flex-flow: column;
      flex-wrap: nowrap;
    }
    &:focus-within {
      box-shadow: 0 0 0px $focus-outline-width var(--c-focus);
    }
  }
  .label {
    display: block;
    text-align: left;
    font-weight: normal;
    margin-bottom: 0.3em;
    font-size: inherit;
  }
  .theme-indicator {
    width: 1.6rem;
  }
  .options--spacing label {
    flex-basis: auto;
    border-bottom: 0;
    &:nth-of-type(2) {
      border-right: inherit;
    }
    @include bp(m) {
      border-right: 0 !important;
      border-bottom: inherit;
    }
  }
  label {
    text-align: left;
    flex-grow: 1;
    flex-basis: 50%;
    padding: 0.5em;
    padding-bottom: 0.4em;
    display: block;
    position: relative;
    cursor: pointer;
    font-size: var(--ms--1);
    font-weight: 400;
    display: flex;
    justify-content: space-between;
    border-right: $border-width solid var(--c-stroke);
    border-bottom: $border-width solid var(--c-stroke);
    &:nth-of-type(3) {
      border-bottom: 0;
    }
    &:nth-of-type(2n) {
      border-right: 0;
    }
    &:last-of-type {
      border-bottom: 0;
      border-right: 0;
    }
    @include bp(m) {
      border-bottom: $border-width solid var(--c-stroke);
      border-right: 0;
      &:nth-of-type(3) {
        border-bottom: inherit;
      }
      &:last-of-type {
        border-bottom: 0;
      }
    }
    &:hover,
    &:focus {
      background: var(--c-background-shade);
      text-decoration: underline;
    }
  }
  svg {
    display: none;
  }

  input:checked + label {
    font-weight: 400;
    background: var(--c-text);
    text-decoration: underline;
    color: var(--c-background);
  }
  input {
    position: absolute;
    left: -9999px;
  }
}
